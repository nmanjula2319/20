Integrity Constraints
=====================
Constraints are the rules which are applied on the tables.

Using contraints we can achieve accuracy and quality of data.

We have five types of constraints.

1) NOT NULL 

2) UNIQUE 

3) PRIMARY KEY 

4) FOREIGN KEY 

5) CHECK 

Constraints can be created at two levels.

i) Column level

ii) Table level 


1) NOT NULL 
-----------
NOT NULL constraint does not accept null values.

NOT NULL constraint can accept duplicate values.

NOT NULL constraint can be created only at column level.

column level
------------
drop table student;

create table student(sno number(3) NOT NULL,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');

insert into student values(null,'ramana','vizag');  //invalid 

commit;

Note:
-----
NOT NULL constraint can be created for multiple columns also.

ex:
drop table student;

create table student(sno number(3) NOT NULL,
				sname varchar2(10) NOT NULL,
					sadd varchar2(12) NOT NULL);

insert into student values(101,'jose','usa');  //valid  

insert into student values(null,'raja','hyd'); //invalid 

insert into student values(102,null,'delhi'); //invalid 

insert into student values(103,'ramana',null);  //invalid 

commit;
	

2) UNIQUE 
------------
UNIQUE constraint does not accept duplicate values.

UNIQUE constraint can accept null values.

UNQIUE constraint can be created at column level and table level.


column level
------------
drop table student;

create table student(sno number(3) UNIQUE,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(null,'ravi','delhi');

insert into student values(101,'ramana','vizag');  //invalid 

commit;


table level
------------
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12),UNIQUE(sno));

insert into student values(101,'raja','hyd');

insert into student values(null,'ravi','delhi');

insert into student values(101,'ramana','vizag');  //invalid 

commit;


Note:
------
UNIQUE constraint can be created for multiple columns.

ex:
	
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12),UNIQUE(sno,sname,sadd));

insert into student values(101,'raja','hyd');


3) PRIMARY KEY
--------------
Primary key is a combination of NOT NULL and UNIQUE constraint.

Primary key does not allow null values and duplicate values.

A table can have only one primary key.

Primary key can be created at column level and table level.

column level
-------------
drop table student;

create table student(sno number(3) PRIMARY KEY,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi'); //invalid 

insert into student values(null,'ramana','vizag'); //invalid 

commit;

table level
-----------
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12),PRIMARY KEY(sno));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi'); //invalid 

insert into student values(null,'ramana','vizag'); //invalid 

commit;


4) Foreign Key
--------------
Foreign key is used to establish the relationship between two tables.

To establish the relationship a parent table must have primary key or unique key and child table must have foreign key.

This relationship is also known as master and detailed relationship.

Foreign key will accept only those values which are present in primary key.

Foreign key will accept duplicate and null values.

Foreign key name may or may not match with primary key name but datatype must match.

Diagram: oracle6.1



parent table
=============
drop table college;
create table college(sno number(3) PRIMARY KEY,sname varchar2(10),sadd varchar2(12));
insert into college values(101,'raja','hyd');
insert into college values(102,'ravi','delhi');
insert into college values(103,'ramana','vizag');
commit;


child table
============
drop table library;

create table library(roll_no number(3) REFERENCES college(sno),book_name varchar2(10));

insert into library values(101,'java'); 

insert into library values(102,'oracle');

insert into library values(103,'react'); 

insert into library values(103,'framework'); 

insert into library values(null,'angular'); 

insert into library values(104,'html'); //invalid 

commit;

We can't drop parent table directly.First we need to drop child table then parent table.
ex:
	drop table library;
	drop table college;



5) CHECK constraint
-------------------
It is used to check the domain of a column.

Here domain means what type of a values a column must accept.

Check constraint can be created at column level and table level.

ex:

column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10),smarks number(3) check(smarks<=100));

insert into student values(101,'raja',67);

insert into student values(102,'ravi',100);

insert into student values(103,'ramana',150); //invalid 

commit;




column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10) check(sname=lower(sname)),smarks number(3));

insert into student values(101,'raja',67);

insert into student values(102,'RAVI',100); //invalid 

insert into student values(103,'RaMaNa',150); //invalid 

commit;


column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10) check(sname=upper(sname)),smarks number(3));

insert into student values(101,'raja',67); //invalid 

insert into student values(102,'RAVI',100);

insert into student values(103,'RaMaNa',150);  //invalid 

commit;



table level
----------
drop table student;

create table student(sno number(3),sname varchar2(10) ,smarks number(3),
							check(sname=upper(sname)));

insert into student values(101,'raja',67); //invalid 

insert into student values(102,'RAVI',100);

insert into student values(103,'RaMaNa',150);  //invalid 

commit;


Interview Queries
=================

Q) Write a query to add constraint in a existing table?

	alter table emp ADD primary key(eid);


Q) Write a query to drop the contraint from table?

	alter table emp DROP primary key;



































































